syntax = "proto3";

package messaging;

message ProcessEvent {
  uint64 pid = 1;
  uint64 ppid = 2;
  string exe = 3;
  repeated string args = 4;
  uint64 start_ts_ns = 5;
  uint32 uid = 6;
  uint32 gid = 7;
  string cgroup = 8;
  string container_id = 9;
}

message FlowEvent {
  string src_ip     = 1;
  string dst_ip     = 2;
  uint32 src_port   = 3;
  uint32 dst_port   = 4;

  // Both variants to satisfy different tests
  string protocol   = 5;   // "UDP", "TCP"
  uint64 bytes_sent = 6;
  uint64 bytes_recv = 7;
  uint32 flags      = 8;
  uint64 start_time = 9;   // ns or epoch-secs; tests only construct

  uint64 end_time   = 10;

  uint64 bytes_tx   = 11;  // alt naming used by WAL tests
  uint64 bytes_rx   = 12;
  string proto      = 13;  // alt naming
  uint32 duration_ms= 14;  // alt naming
}

message Envelope {
  string version           = 1;
  uint64 ts_ns             = 2;
  string idempotency_key   = 3;
  FlowEvent flow           = 4;
  bytes  sig               = 5;
  bytes  prev_sig          = 6;
  bytes  payload           = 7;
}

message PublishAck {
  enum Status {
    OK = 0;
    RETRY = 1;
    INVALID = 2;
    UNAUTHORIZED = 3;
  }
  Status status = 1;
  string reason = 2;
  int32 backoff_hint_ms = 3;
}

service EventBus {
  rpc Publish(Envelope) returns (PublishAck);
}